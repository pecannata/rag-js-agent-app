
> rag-js-agent-app@1.0.270 start
> next start

   ‚ñ≤ Next.js 15.3.4
   - Local:        http://localhost:3020
   - Network:      http://192.168.1.149:3020

 ‚úì Starting...
 ‚úì Ready in 350ms
üìß Background job processor initialized
‚úÖ Blog post cache auto re-prime system initialized
‚úÖ Cache auto re-prime system initialized
(node:11084) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
üö´ Cache miss: blog_posts_all_nolimit_0_nocontent
üîç Blog Database Query Execution: 
      SELECT 
        id,
        title,
        slug,
        '' as content,
        excerpt,
        author,
        status,
        tags,
        TO_CHAR(created_at, 'YYYY-MM-DD"T"HH24:MI:SS"Z"') ...
‚úÖ Blog database query executed successfully
üì§ Raw Oracle Output (first 500 chars): 
         or must be a 23c compatible instant client
         Thick driver unavailable for use.


{
  "results" : [
    {
      "columns" : [
        {
          "name" : "ID",
          "type" : "NUMBER"
        },
        {
          "name" : "TITLE",
          "type" : "VARCHAR2"
        },
        {
          "name" : "SLUG",
          "type" : "VARCHAR2"
        },
        {
          "name" : "CONTENT",
          "type" : "CHAR"
        },
        {
          "name" : "EXCERPT",
          ...
üßπ Cleaned Oracle output (first 500 chars): {
  "results" : [
    {
      "columns" : [
        {
          "name" : "ID",
          "type" : "NUMBER"
        },
        {
          "name" : "TITLE",
          "type" : "VARCHAR2"
        },
        {
          "name" : "SLUG",
          "type" : "VARCHAR2"
        },
        {
          "name" : "CONTENT",
          "type" : "CHAR"
        },
        {
          "name" : "EXCERPT",
          "type" : "VARCHAR2"
        },
        {
          "name" : "AUTHOR",
          "type" : "VARCHAR2
‚úÖ Successfully parsed as JSON. Structure: {
  "results": [
    {
      "columns": [
        {
          "name": "ID",
          "type": "NUMBER"
        },
        {
          "name": "TITLE",
          "type": "VARCHAR2"
        },
        {
          "name": "SLUG",
          "type": "VARCHAR2"
        },
        {
          "name": "CONTENT",
          "type": "CHAR"
        },
        {
          "name": "EXCERPT",
          "type": "VARCHAR2"
        },
        {
          "name": "AUTHOR",
          "type": "VARCHAR2"
        },
 
‚úÖ Extracted Oracle items: 187 rows
üìä Blog query result structure: object true 187
üóÑÔ∏è Cached: blog_posts_all_nolimit_0_nocontent (TTL: 43200s)
üóÑÔ∏è Stored blog posts in cache
üîç Blog post request for ID: 314
üîç Blog post cache miss, fetching from database: 314
üîç Blog ID Database Query Execution: 
        SELECT 
          id,
          title,
          slug,
          content,
          excerpt,
          author,
          status,
          tags,
          TO_CHAR(created_at, 'YYYY-MM-DD"T"HH...
‚úÖ Blog ID database query executed successfully
üì§ Raw Oracle Output (first 500 chars): 
         or must be a 23c compatible instant client
         Thick driver unavailable for use.


{
  "results" : [
    {
      "columns" : [
        {
          "name" : "ID",
          "type" : "NUMBER"
        },
        {
          "name" : "TITLE",
          "type" : "VARCHAR2"
        },
        {
          "name" : "SLUG",
          "type" : "VARCHAR2"
        },
        {
          "name" : "CONTENT",
          "type" : "CLOB"
        },
        {
          "name" : "EXCERPT",
          ...
üßπ Cleaned Oracle output for blog post (first 500 chars): {
  "results" : [
    {
      "columns" : [
        {
          "name" : "ID",
          "type" : "NUMBER"
        },
        {
          "name" : "TITLE",
          "type" : "VARCHAR2"
        },
        {
          "name" : "SLUG",
          "type" : "VARCHAR2"
        },
        {
          "name" : "CONTENT",
          "type" : "CLOB"
        },
        {
          "name" : "EXCERPT",
          "type" : "VARCHAR2"
        },
        {
          "name" : "AUTHOR",
          "type" : "VARCHAR2
‚úÖ Successfully parsed as JSON
‚úÖ Extracted Oracle items: 1 rows
üîç Query result: { success: true, dataLength: 1, error: undefined }
üîç Raw post data: [
  'id',           'title',
  'slug',         'content',
  'excerpt',      'author',
  'status',       'tags',
  'created_at',   'updated_at',
  'published_at'
]
‚úÖ Blog post constructed: {
  id: 314,
  title: '(AI) SQL Query Processing Through RAG Path - Alwayscurious',
  slug: 'ai-sql-query-processing-through-rag-path-alwayscurious',
  content: '<div class="wp-block-group is-layout-constrained wp-block-group-is-layout-constrained"><h1 style="ma...',
  excerpt: `In (AI) Agentic RAG Chat App - Phase 2 - with RAG and Oracle, we demonstrated how to build an Agentic RAG Chat app without writing any code, simply by providing natural language specifications to WARP 2.0. Additionally, WARP can explain parts of the generated code, making it an excellent tool for documentation. For example, when asked, "Can you draw a diagram with detailed descriptions of how an SQL query is processed through the RAG path?", here's what WARP produced:`,
  author: 'Blog Author',
  status: 'published',
  tags: [ 'imported', 'url-import' ],
  createdAt: '2025-07-20T09:45:20Z',
  updatedAt: '2025-07-20T09:45:20Z',
  publishedAt: '2025-07-20T14:45:17Z'
}
üíæ Blog post cached: blog_post_314 (1/20)
üíæ Cached blog post in LRU: 314
üîç Blog post request for ID: 312
üîç Blog post cache miss, fetching from database: 312
üîç Blog ID Database Query Execution: 
        SELECT 
          id,
          title,
          slug,
          content,
          excerpt,
          author,
          status,
          tags,
          TO_CHAR(created_at, 'YYYY-MM-DD"T"HH...
‚úÖ Blog ID database query executed successfully
üì§ Raw Oracle Output (first 500 chars): 
         or must be a 23c compatible instant client
         Thick driver unavailable for use.


{
  "results" : [
    {
      "columns" : [
        {
          "name" : "ID",
          "type" : "NUMBER"
        },
        {
          "name" : "TITLE",
          "type" : "VARCHAR2"
        },
        {
          "name" : "SLUG",
          "type" : "VARCHAR2"
        },
        {
          "name" : "CONTENT",
          "type" : "CLOB"
        },
        {
          "name" : "EXCERPT",
          ...
üßπ Cleaned Oracle output for blog post (first 500 chars): {
  "results" : [
    {
      "columns" : [
        {
          "name" : "ID",
          "type" : "NUMBER"
        },
        {
          "name" : "TITLE",
          "type" : "VARCHAR2"
        },
        {
          "name" : "SLUG",
          "type" : "VARCHAR2"
        },
        {
          "name" : "CONTENT",
          "type" : "CLOB"
        },
        {
          "name" : "EXCERPT",
          "type" : "VARCHAR2"
        },
        {
          "name" : "AUTHOR",
          "type" : "VARCHAR2
‚úÖ Successfully parsed as JSON
‚úÖ Extracted Oracle items: 1 rows
üîç Query result: { success: true, dataLength: 1, error: undefined }
üîç Raw post data: [
  'id',           'title',
  'slug',         'content',
  'excerpt',      'author',
  'status',       'tags',
  'created_at',   'updated_at',
  'published_at'
]
‚úÖ Blog post constructed: {
  id: 312,
  title: '(AI) Agentic RAG Chat App - Phase 2 - with RAG and Oracle - Alwayscurious',
  slug: 'ai-agentic-rag-chat-app-phase-2-with-rag-and-oracle-alwayscurious',
  content: '<div class="wp-block-group is-layout-constrained wp-block-group-is-layout-constrained"><h1 style="ma...',
  excerpt: 'The key sections of this overview are:',
  author: 'Blog Author',
  status: 'published',
  tags: [ 'imported', 'url-import' ],
  createdAt: '2025-07-19T21:04:43Z',
  updatedAt: '2025-07-19T21:04:43Z',
  publishedAt: '2025-07-20T02:04:39Z'
}
üíæ Blog post cached: blog_post_312 (2/20)
üíæ Cached blog post in LRU: 312
üö´ Cache miss: blog_posts_published_3_0_nocontent
üîç Blog Database Query Execution: 
      SELECT 
        id,
        title,
        slug,
        '' as content,
        excerpt,
        author,
        status,
        tags,
        TO_CHAR(created_at, 'YYYY-MM-DD"T"HH24:MI:SS"Z"') ...
‚úÖ Blog database query executed successfully
üì§ Raw Oracle Output (first 500 chars): 
         or must be a 23c compatible instant client
         Thick driver unavailable for use.


{
  "results" : [
    {
      "columns" : [
        {
          "name" : "ID",
          "type" : "NUMBER"
        },
        {
          "name" : "TITLE",
          "type" : "VARCHAR2"
        },
        {
          "name" : "SLUG",
          "type" : "VARCHAR2"
        },
        {
          "name" : "CONTENT",
          "type" : "CHAR"
        },
        {
          "name" : "EXCERPT",
          ...
üßπ Cleaned Oracle output (first 500 chars): {
  "results" : [
    {
      "columns" : [
        {
          "name" : "ID",
          "type" : "NUMBER"
        },
        {
          "name" : "TITLE",
          "type" : "VARCHAR2"
        },
        {
          "name" : "SLUG",
          "type" : "VARCHAR2"
        },
        {
          "name" : "CONTENT",
          "type" : "CHAR"
        },
        {
          "name" : "EXCERPT",
          "type" : "VARCHAR2"
        },
        {
          "name" : "AUTHOR",
          "type" : "VARCHAR2
‚úÖ Successfully parsed as JSON. Structure: {
  "results": [
    {
      "columns": [
        {
          "name": "ID",
          "type": "NUMBER"
        },
        {
          "name": "TITLE",
          "type": "VARCHAR2"
        },
        {
          "name": "SLUG",
          "type": "VARCHAR2"
        },
        {
          "name": "CONTENT",
          "type": "CHAR"
        },
        {
          "name": "EXCERPT",
          "type": "VARCHAR2"
        },
        {
          "name": "AUTHOR",
          "type": "VARCHAR2"
        },
 
‚úÖ Extracted Oracle items: 3 rows
üìä Blog query result structure: object true 3
üóÑÔ∏è Cached: blog_posts_published_3_0_nocontent (TTL: 43200s)
üóÑÔ∏è Stored blog posts in cache
üö´ Cache miss: blog_posts_published_nolimit_0_nocontent
üîç Blog Database Query Execution: 
      SELECT 
        id,
        title,
        slug,
        '' as content,
        excerpt,
        author,
        status,
        tags,
        TO_CHAR(created_at, 'YYYY-MM-DD"T"HH24:MI:SS"Z"') ...
üîç Fetching categorized blog posts...
üöÄ Executing single optimized categorized query...
‚úÖ Blog database query executed successfully
üì§ Raw Oracle Output (first 500 chars): 
         or must be a 23c compatible instant client
         Thick driver unavailable for use.


{
  "results" : [
    {
      "columns" : [
        {
          "name" : "ID",
          "type" : "NUMBER"
        },
        {
          "name" : "TITLE",
          "type" : "VARCHAR2"
        },
        {
          "name" : "SLUG",
          "type" : "VARCHAR2"
        },
        {
          "name" : "CONTENT",
          "type" : "CHAR"
        },
        {
          "name" : "EXCERPT",
          ...
üßπ Cleaned Oracle output (first 500 chars): {
  "results" : [
    {
      "columns" : [
        {
          "name" : "ID",
          "type" : "NUMBER"
        },
        {
          "name" : "TITLE",
          "type" : "VARCHAR2"
        },
        {
          "name" : "SLUG",
          "type" : "VARCHAR2"
        },
        {
          "name" : "CONTENT",
          "type" : "CHAR"
        },
        {
          "name" : "EXCERPT",
          "type" : "VARCHAR2"
        },
        {
          "name" : "AUTHOR",
          "type" : "VARCHAR2
‚úÖ Successfully parsed as JSON. Structure: {
  "results": [
    {
      "columns": [
        {
          "name": "ID",
          "type": "NUMBER"
        },
        {
          "name": "TITLE",
          "type": "VARCHAR2"
        },
        {
          "name": "SLUG",
          "type": "VARCHAR2"
        },
        {
          "name": "CONTENT",
          "type": "CHAR"
        },
        {
          "name": "EXCERPT",
          "type": "VARCHAR2"
        },
        {
          "name": "AUTHOR",
          "type": "VARCHAR2"
        },
 
‚úÖ Extracted Oracle items: 186 rows
üìä Blog query result structure: object true 186
üóÑÔ∏è Cached: blog_posts_published_nolimit_0_nocontent (TTL: 43200s)
üóÑÔ∏è Stored blog posts in cache
‚úÖ Optimized categorized query completed
üì§ Optimized Raw Output (first 500 chars): 
         or must be a 23c compatible instant client
         Thick driver unavailable for use.


{
  "results" : [
    {
      "columns" : [
        {
          "name" : "ID",
          "type" : "NUMBER"
        },
        {
          "name" : "TITLE",
          "type" : "VARCHAR2"
        },
        {
          "name" : "AUTHOR",
          "type" : "VARCHAR2"
        },
        {
          "name" : "PUBLISHED_AT",
          "type" : "VARCHAR2"
        },
        {
          "name" : "CATEGORY"
üßπ Cleaned optimized output (first 500 chars): {
  "results" : [
    {
      "columns" : [
        {
          "name" : "ID",
          "type" : "NUMBER"
        },
        {
          "name" : "TITLE",
          "type" : "VARCHAR2"
        },
        {
          "name" : "AUTHOR",
          "type" : "VARCHAR2"
        },
        {
          "name" : "PUBLISHED_AT",
          "type" : "VARCHAR2"
        },
        {
          "name" : "CATEGORY",
          "type" : "VARCHAR2"
        }
      ],
      "items" : [
        {
          "id" : 31
‚úÖ Optimized Successfully parsed as JSON
üîç Optimized Items structure: {
  "id": 314,
  "title": "(AI) SQL Query Processing Through RAG Path - Alwayscurious",
  "author": "Blog Author",
  "published_at": "2025-07-20T14:45:17Z",
  "category": "ai"
}
‚úÖ Optimized Extracted 186 posts
‚úÖ Optimized Sample post: {
  id: 314,
  title: '(AI) SQL Query Processing Through RAG Path - Alwayscurious',
  author: 'Blog Author',
  publishedAt: '2025-07-20T14:45:17Z',
  category: 'ai'
}
‚úÖ Categorized posts optimized: AI=56, CS=11, Science=119
üíæ Cache SET: categorized_blog_posts
üóÑÔ∏è Stored categorized posts in node-cache
üîç Blog post request for ID: 246
üîç Blog post cache miss, fetching from database: 246
üîç Blog ID Database Query Execution: 
        SELECT 
          id,
          title,
          slug,
          content,
          excerpt,
          author,
          status,
          tags,
          TO_CHAR(created_at, 'YYYY-MM-DD"T"HH...
‚úÖ Blog ID database query executed successfully
üì§ Raw Oracle Output (first 500 chars): 
         or must be a 23c compatible instant client
         Thick driver unavailable for use.


{
  "results" : [
    {
      "columns" : [
        {
          "name" : "ID",
          "type" : "NUMBER"
        },
        {
          "name" : "TITLE",
          "type" : "VARCHAR2"
        },
        {
          "name" : "SLUG",
          "type" : "VARCHAR2"
        },
        {
          "name" : "CONTENT",
          "type" : "CLOB"
        },
        {
          "name" : "EXCERPT",
          ...
üßπ Cleaned Oracle output for blog post (first 500 chars): {
  "results" : [
    {
      "columns" : [
        {
          "name" : "ID",
          "type" : "NUMBER"
        },
        {
          "name" : "TITLE",
          "type" : "VARCHAR2"
        },
        {
          "name" : "SLUG",
          "type" : "VARCHAR2"
        },
        {
          "name" : "CONTENT",
          "type" : "CLOB"
        },
        {
          "name" : "EXCERPT",
          "type" : "VARCHAR2"
        },
        {
          "name" : "AUTHOR",
          "type" : "VARCHAR2
‚úÖ Successfully parsed as JSON
‚úÖ Extracted Oracle items: 1 rows
üîç Query result: { success: true, dataLength: 1, error: undefined }
üîç Raw post data: [
  'id',           'title',
  'slug',         'content',
  'excerpt',      'author',
  'status',       'tags',
  'created_at',   'updated_at',
  'published_at'
]
‚úÖ Blog post constructed: {
  id: 246,
  title: '(CS) Foundations of a Python Interpreter - Alwayscurious',
  slug: 'cs-foundations-of-a-python-interpreter-alwayscurious',
  content: '<div class="wp-block-group is-layout-constrained wp-block-group-is-layout-constrained"><h1 style="ma...',
  excerpt: 'What computing elements are need to build an interpreter for a language like Python or a compiler for a language like Java?',
  author: 'Blog Author',
  status: 'published',
  tags: [ 'imported', 'url-import' ],
  createdAt: '2025-07-19T20:19:39Z',
  updatedAt: '2025-07-19T20:19:39Z',
  publishedAt: '2025-07-20T01:19:36Z'
}
üíæ Blog post cached: blog_post_246 (3/20)
üíæ Cached blog post in LRU: 246
‚úÖ Cache hit: blog_posts_published_3_0_nocontent (age: 950s)
üöÄ Serving blog posts from cache
üîç Fetching categorized blog posts...
üöÄ Serving categorized posts from node-cache
‚úÖ Cache hit: blog_posts_published_nolimit_0_nocontent (age: 946s)
üöÄ Serving blog posts from cache
‚úÖ Cache hit: blog_posts_all_nolimit_0_nocontent (age: 1000s)
üöÄ Serving blog posts from cache
üóëÔ∏è Cache DELETE: categorized_blog_posts
‚è∞ Cache expired: categorized_blog_posts - starting automatic re-prime...
üîÑ Auto re-priming categorized blog posts...
üöÄ Fetching fresh categorized blog data for cache...
üì§ Parsing results (first 500 chars): 
         or must be a 23c compatible instant client
         Thick driver unavailable for use.


{
  "results" : [
    {
      "columns" : [
        {
          "name" : "ID",
          "type" : "NUMBER"
        },
        {
          "name" : "TITLE",
          "type" : "VARCHAR2"
        },
        {
          "name" : "AUTHOR",
          "type" : "VARCHAR2"
        },
        {
          "name" : "PUBLISHED_AT",
          "type" : "VARCHAR2"
        },
        {
          "name" : "CATEGORY"
üßπ Cleaned cache output (first 500 chars): {
  "results" : [
    {
      "columns" : [
        {
          "name" : "ID",
          "type" : "NUMBER"
        },
        {
          "name" : "TITLE",
          "type" : "VARCHAR2"
        },
        {
          "name" : "AUTHOR",
          "type" : "VARCHAR2"
        },
        {
          "name" : "PUBLISHED_AT",
          "type" : "VARCHAR2"
        },
        {
          "name" : "CATEGORY",
          "type" : "VARCHAR2"
        }
      ],
      "items" : [
        {
          "id" : 31
‚úÖ Successfully parsed as JSON
üîç Items structure: {
  "id": 314,
  "title": "(AI) SQL Query Processing Through RAG Path - Alwayscurious",
  "author": "Blog Author",
  "published_at": "2025-07-20T14:45:17Z",
  "category": "ai"
}
‚úÖ Extracted 186 posts
‚úÖ Sample post: {
  id: 314,
  title: '(AI) SQL Query Processing Through RAG Path - Alwayscurious',
  author: 'Blog Author',
  publishedAt: '2025-07-20T14:45:17Z',
  category: 'ai'
}
‚úÖ Fresh data fetched: AI=56, CS=11, Science=119
üíæ Cache SET: categorized_blog_posts
üî• Auto re-prime completed - categorized posts cache is warm!
