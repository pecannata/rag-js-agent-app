#!/bin/bash

# Mac Deployment Script for RAG-JS-Agent-App
# Run this script to deploy the production build using tmux

echo "🚀 Starting Mac deployment with tmux..."

# Check if tmux is installed
if ! command -v tmux &> /dev/null; then
    echo "⚠️  tmux is not installed. Installing with Homebrew..."
    if command -v brew &> /dev/null; then
        brew install tmux
    else
        echo "❌ Homebrew not found. Please install tmux manually:"
        echo "   brew install tmux"
        echo "   or visit: https://github.com/tmux/tmux/wiki/Installing"
        exit 1
    fi
fi

# Stop any existing production server
echo "Stopping existing production server..."
./stop.mac

# Setup Ollama service and models
echo "Setting up Ollama for local AI capabilities..."
if [ -f "./setup-ollama-models.sh" ]; then
    echo "🔧 Running Ollama setup script..."
    ./setup-ollama-models.sh
    echo "✅ Ollama setup completed"
else
    echo "⚠️  Ollama setup script not found, using basic service check"
    # Fallback to basic service check
    if brew services list | grep -q "ollama.*started"; then
        echo "✅ Ollama service is already running"
    else
        echo "🚀 Starting Ollama service..."
        brew services start ollama
        echo "⏳ Waiting for Ollama to initialize..."
        sleep 10
        
        # Verify Ollama is responding
        if curl -s http://localhost:11434/api/tags > /dev/null 2>&1; then
            echo "✅ Ollama service is ready"
        else
            echo "⚠️  Ollama service may not be fully ready yet"
        fi
    fi
fi

# Check and install Python dependencies for document processing
echo "Checking Python dependencies for document processing..."
if [ -f "scripts/requirements.txt" ]; then
    echo "📦 Installing Python dependencies..."
    pip3 install -r scripts/requirements.txt --quiet
    echo "✅ Python dependencies installed"
else
    echo "⚠️  No requirements.txt found, installing basic dependencies..."
    pip3 install PyPDF2 python-docx python-pptx langchain pillow pytesseract --quiet
    echo "✅ Basic Python dependencies installed"
fi

# Build the project
echo "Building production version..."
npm run build -- --no-lint

# Start production server in tmux session
echo "Starting production server in tmux session..."
SESSION_NAME="rag-js-agent-app"

# Kill existing session if it exists
tmux kill-session -t $SESSION_NAME 2>/dev/null || true

# Create new tmux session and start the server
tmux new-session -d -s $SESSION_NAME -c "$(pwd)" 'PORT=3020 npm start 2>&1 | tee production.log'

# Wait a moment for server to start
echo "Waiting for server to initialize..."
sleep 5

# Check if server is running
echo "Checking server status..."
STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3020)

if [ "$STATUS" = "200" ]; then
    echo "✅ Production server is running successfully!"
    echo "📍 URL: http://localhost:3020"
    echo "🖥️  tmux session: $SESSION_NAME"
    echo "📝 View logs: tail -f production.log"
    echo "🔍 Check session: tmux ls"
    echo "🖱️  Attach to session: tmux attach -t $SESSION_NAME"
    echo "🛑 Stop server: ./stop.mac"
    echo ""
    echo "🎯 The server will continue running even after you close this terminal."
    echo "   To monitor: tmux attach -t $SESSION_NAME"
    echo "   To detach: Ctrl+B, then D"
else
    echo "❌ Server failed to start properly"
    echo "📝 Check production.log for errors: tail -f production.log"
    echo "🔍 Check tmux session: tmux attach -t $SESSION_NAME"
fi
